#!/usr/bin/env bash

# Detect which `ls` flavor is in use
if ls --color > /dev/null 2>&1; then # GNU `ls`
  colorflag="--color"
else # macOS `ls`
  colorflag="-G"
fi

# List all files colorized in long format
alias ll="ls -lF ${colorflag}"

# List all files colorized in long format, including dot files
alias la="ls -laF ${colorflag}"

# List only directories
alias lsd="ls -lF ${colorflag} | grep --color=never '^d'"

# Always use color output for `ls`
alias ls="command ls -l ${colorflag}"
export LS_COLORS='no=00:fi=00:di=01;34:ln=01;36:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arj=01;31:*.taz=01;31:*.lzh=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.gz=01;31:*.bz2=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.jpg=01;35:*.jpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.avi=01;35:*.fli=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.ogg=01;35:*.mp3=01;35:*.wav=01;35:'

# Custom alias
# alias elear-cmake-build="rm -rf build && mkdir build && cd build && CC=clang cmake .. -DPlatform=Macos && make VERBOSE=1 && cd .."
alias elear-cmake-install="cd build && make install && cd .."
# alias elear-conan-install-ios="rm -rf build && conan install . -if build --profile "
# alias elear-conan='rm -rf build && conan install . -if build  && conan build . -bf build && conan export-pkg . $(basename `git rev-parse --show-toplevel`)/0.0.1@jenkins/master -bf=build -f'
#alias docker-clean-cache="docker rm $(docker ps -q -f status=exited) && docker rm $(docker ps -a -q) && docker rmi $(docker images -f 'dangling=true' -q)"
#alias docker-coco-server="docker run --rm -it -u cocouser -v `pwd`:'/home/cocouser/workspace' -w /home/cocouser/workspace coco-server:beta /bin/bash"
#alias docker-gradle='docker run --rm -it -u gradle --mount src=`pwd`,target=/home/gradle/project,type=bind -w /home/gradle/project coco-server:beta'
#alias docker-nginx='docker run --rm -d -p 8080:80 -v $HOME/Developer/coco-server-app/nginx-data:/usr/share/nginx/html/ nginx:stable'
#alias docker-build='docker build . -t'
alias coco-server='ssh ec2-13-232-105-177.ap-south-1.compute.amazonaws.com'
alias coco-kubernetes-master='ssh ec2-13-234-173-137.ap-south-1.compute.amazonaws.com'
alias coco-jenkins-server='ssh ec2-13-234-238-60.ap-south-1.compute.amazonaws.com'
